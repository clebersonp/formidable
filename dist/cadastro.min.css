/*
# Settings:
- This are basic configs of your architecture. Are the global variables that define colors, spaces, paddings, and another required settings
to the framework.
- Here we don't have CSS that will compile, just the definitions for other files that will do it
*/
/*
# Tools
- It's the place that you will write your mixins and functions needed to build your layouts.
- Could be anything, since font-face mixins, until animations and etc...
- Nothing here will genereta final CSS too.
*/
@keyframes rotate {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(360deg); } }

/*
# Generic
- This is the first layer, that will generate final CSS, here you define yours resets and just that.
*/
* {
  box-sizing: border-box;
  font-family: sans-serif; }

html {
  font-size: 10px; }

/*
# Base
- Here it's the last layer that we willl see selectors directly in tags.
- Here we will leave styles for headings (h1-h6), blockquotes, a, buttons, etc.
- just BASIC styles.
*/
/*
# Objects
Following OOCSS, here is where we will have our little "objects" (little parts of the site, that area reused so many times).
Ex: Buttons, lists, painels...
*/
.container {
  padding: 0 10%; }

.btn-generic {
  width: 100%;
  padding: 15px;
  border-radius: 200px;
  border: 0;
  color: #ffffff;
  transition: opacity .3s, color .3s;
  position: relative;
  cursor: pointer; }
  .btn-generic.-green {
    background-color: #00c8b3; }
  .btn-generic.-loading {
    text-indent: 9999px; }
    .btn-generic.-loading:after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      margin: auto;
      width: 15px;
      height: 15px;
      border: 2px solid transparent;
      border-left-color: currentColor;
      border-top-color: currentColor;
      border-radius: 50%;
      animation-name: rotate;
      animation-duration: .5s;
      animation-iteration-count: infinite;
      animation-timing-function: linear; }
  .btn-generic:focus, .btn-generic:hover {
    opacity: .7; }
  .btn-generic:disabled {
    color: #dddcdc;
    background-color: #f6f6f6;
    cursor: not-allowed; }

.form-group {
  width: 100%;
  display: block;
  position: relative;
  margin: 3rem 0;
  font-size: 1.4rem; }
  .form-group > .label {
    color: #333333;
    position: absolute;
    left: 0;
    top: 5px;
    transition: transform .2s, color .2s;
    pointer-events: none; }
  .form-group > .input {
    display: block;
    font-size: inherit;
    outline: 0;
    width: 100%;
    border: none;
    color: #efeeed;
    border-bottom: 1px solid #efeeed;
    padding: 5px 0;
    transition: color .2s; }
    .form-group > .input:focus {
      color: #333333; }
    .form-group > .input.-invalid {
      color: #eb4a46;
      border-color: currentColor; }
    .form-group > .input.-invalid ~ .errors {
      color: #eb4a46;
      opacity: 1; }
    .form-group > .input.-typed ~ .label,
    .form-group > .input:focus ~ .label {
      transform: translateY(-100%); }
  .form-group > .errors {
    opacity: 0;
    display: block;
    width: 100%;
    position: absolute;
    font-size: 1.2rem;
    transition: opacity .2s; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3BhZ2VzL2NhZGFzdHJvL3NyYy9hcHAvYXNzZXRzL2Nzcy9zdHJ1Y3R1cmUvc2V0dGluZ3Muc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3BhZ2VzL2NhZGFzdHJvL3NyYy9hcHAvYXNzZXRzL2Nzcy9zdHJ1Y3R1cmUvdG9vbHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3BhZ2VzL2NhZGFzdHJvL3NyYy9hcHAvYXNzZXRzL2Nzcy9zdHJ1Y3R1cmUvZ2VuZXJpYy5zY3NzIiwid2VicGFjazovLy8uL3NyYy9hcHAvcGFnZXMvY2FkYXN0cm8vc3JjL2FwcC9hc3NldHMvY3NzL3N0cnVjdHVyZS9iYXNlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9wYWdlcy9jYWRhc3Ryby9zcmMvYXBwL2Fzc2V0cy9jc3Mvc3RydWN0dXJlL29iamVjdHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3BhZ2VzL2NhZGFzdHJvL3NyYy9hcHAvYXNzZXRzL2Nzcy9zdHJ1Y3R1cmUvb2JqZWN0cy9jb250YWluZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3BhZ2VzL2NhZGFzdHJvL3NyYy9hcHAvY29tcG9uZW50cy9CdG5HZW5lcmljL2J0bi1nZW5lcmljLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9wYWdlcy9jYWRhc3Ryby9zcmMvYXBwL2NvbXBvbmVudHMvRm9ybUdyb3VwL2Zvcm0tZ3JvdXAuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7RUFLRTtBQ0xGOzs7OztFQUtFO0FBT0Y7RUFDRTtJQUFNLHdCQUF1QjtFQUM3QjtJQUFJLDBCQUF5Qjs7QUNkL0I7OztFQUdFO0FBSUY7RUFDRSx1QkFBc0I7RUFDdEIsd0JGRHFCLEVFRXRCOztBQUVEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FDZEQ7Ozs7O0VBS0U7QUNMRjs7OztFQUlFO0FDSkY7RUFDRSxlQUFjLEVBQ2Y7O0FDRkQ7RUFDRSxZQUFXO0VBQ1gsY0FBYTtFQUNiLHFCQUFvQjtFQUNwQixVQUFTO0VBQ1QsZU5PYTtFTU5iLG1DQUFrQztFQUNsQyxtQkFBa0I7RUFDbEIsZ0JBQWUsRUFtQ2hCO0VBM0NEO0lBVUksMEJOR21CLEVNRnBCO0VBWEg7SUFhSSxvQkFBbUIsRUFvQnBCO0lBakNIO01BZU0sWUFBVztNQUNYLGVBQWM7TUFDZCxtQkFBa0I7TUFDbEIsT0FBTTtNQUNOLFNBQVE7TUFDUixRQUFPO01BQ1AsVUFBUztNQUNULGFBQVk7TUxkaEIsWUtld0I7TUxkeEIsYUtjd0I7TUFDcEIsOEJBQTZCO01BQzdCLGdDQUErQjtNQUMvQiwrQkFBOEI7TUFDOUIsbUJBQWtCO01BQ2xCLHVCQUFzQjtNQUN0Qix3QkFBdUI7TUFDdkIsb0NBQW1DO01BQ25DLGtDQUFpQyxFQUNsQztFQWhDTDtJQW9DSSxZQUFXLEVBQ1o7RUFyQ0g7SUF1Q0ksZUFBYztJQUNkLDBCQUF5QjtJQUN6QixvQkFBbUIsRUFDcEI7O0FDeENIO0VBQ0UsWUFBVztFQUNYLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIsZUFBYztFQUNkLGtCQUFpQixFQStDbEI7RUFwREQ7SUFPSSxlQUFjO0lBQ2QsbUJBQWtCO0lBQ2xCLFFBQU87SUFDUCxTQVptQjtJQWFuQixxQ0FBb0M7SUFDcEMscUJBQW9CLEVBQ3JCO0VBYkg7SUFlSSxlQUFjO0lBQ2QsbUJBQWtCO0lBQ2xCLFdBQVU7SUFDVixZQUFXO0lBQ1gsYUFBWTtJQUNaLGVBQWM7SUFDZCxpQ0FBZ0M7SUFDaEMsZUFBNkI7SUFDN0Isc0JBQXFCLEVBbUJ0QjtJQTFDSDtNQTBCTSxlQUFjLEVBQ2Y7SUEzQkw7TUE4Qk0sZUFBYztNQUNkLDJCQUEwQixFQUMzQjtJQWhDTDtNQWtDTSxlQUFjO01BQ2QsV0FBVSxFQUNYO0lBcENMOztNQXdDTSw2QkFBNEIsRUFDN0I7RUF6Q0w7SUE2Q0ksV0FBVTtJQUNWLGVBQWM7SUFDZCxZQUFXO0lBQ1gsbUJBQWtCO0lBQ2xCLGtCQUFpQjtJQUNqQix3QkFBdUIsRUFDeEIiLCJmaWxlIjoiY2FkYXN0cm8ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4jIFNldHRpbmdzOlxuLSBUaGlzIGFyZSBiYXNpYyBjb25maWdzIG9mIHlvdXIgYXJjaGl0ZWN0dXJlLiBBcmUgdGhlIGdsb2JhbCB2YXJpYWJsZXMgdGhhdCBkZWZpbmUgY29sb3JzLCBzcGFjZXMsIHBhZGRpbmdzLCBhbmQgYW5vdGhlciByZXF1aXJlZCBzZXR0aW5nc1xudG8gdGhlIGZyYW1ld29yay5cbi0gSGVyZSB3ZSBkb24ndCBoYXZlIENTUyB0aGF0IHdpbGwgY29tcGlsZSwganVzdCB0aGUgZGVmaW5pdGlvbnMgZm9yIG90aGVyIGZpbGVzIHRoYXQgd2lsbCBkbyBpdFxuKi9cblxuXG4kZm9udC1zdGFjazogc2Fucy1zZXJpZjtcblxuXG4vLyAjIyBDb2xvcnNcbiR3aGl0ZTogI2ZmZmZmZjtcbiRncmVlbi1kZWZhdWx0OiAjMDBjOGIzO1xuXG5cblxuIiwiLypcbiMgVG9vbHNcbi0gSXQncyB0aGUgcGxhY2UgdGhhdCB5b3Ugd2lsbCB3cml0ZSB5b3VyIG1peGlucyBhbmQgZnVuY3Rpb25zIG5lZWRlZCB0byBidWlsZCB5b3VyIGxheW91dHMuXG4tIENvdWxkIGJlIGFueXRoaW5nLCBzaW5jZSBmb250LWZhY2UgbWl4aW5zLCB1bnRpbCBhbmltYXRpb25zIGFuZCBldGMuLi5cbi0gTm90aGluZyBoZXJlIHdpbGwgZ2VuZXJldGEgZmluYWwgQ1NTIHRvby5cbiovXG5cbkBtaXhpbiBzcXVhcmUoJHNpemUpIHtcbiAgd2lkdGg6ICRzaXplO1xuICBoZWlnaHQ6ICRzaXplO1xufVxuXG5Aa2V5ZnJhbWVzIHJvdGF0ZSB7XG4gIGZyb20ge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpO31cbiAgdG8ge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7fVxufVxuIiwiLypcbiMgR2VuZXJpY1xuLSBUaGlzIGlzIHRoZSBmaXJzdCBsYXllciwgdGhhdCB3aWxsIGdlbmVyYXRlIGZpbmFsIENTUywgaGVyZSB5b3UgZGVmaW5lIHlvdXJzIHJlc2V0cyBhbmQganVzdCB0aGF0LlxuKi9cblxuLy8gbm9ybWFsaXplIGdvZXMgaGVyZVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1mYW1pbHk6ICRmb250LXN0YWNrO1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxMHB4O1xufVxuIiwiLypcbiMgQmFzZVxuLSBIZXJlIGl0J3MgdGhlIGxhc3QgbGF5ZXIgdGhhdCB3ZSB3aWxsbCBzZWUgc2VsZWN0b3JzIGRpcmVjdGx5IGluIHRhZ3MuXG4tIEhlcmUgd2Ugd2lsbCBsZWF2ZSBzdHlsZXMgZm9yIGhlYWRpbmdzIChoMS1oNiksIGJsb2NrcXVvdGVzLCBhLCBidXR0b25zLCBldGMuXG4tIGp1c3QgQkFTSUMgc3R5bGVzLlxuKi9cbiIsIi8qXG4jIE9iamVjdHNcbkZvbGxvd2luZyBPT0NTUywgaGVyZSBpcyB3aGVyZSB3ZSB3aWxsIGhhdmUgb3VyIGxpdHRsZSBcIm9iamVjdHNcIiAobGl0dGxlIHBhcnRzIG9mIHRoZSBzaXRlLCB0aGF0IGFyZWEgcmV1c2VkIHNvIG1hbnkgdGltZXMpLlxuRXg6IEJ1dHRvbnMsIGxpc3RzLCBwYWluZWxzLi4uXG4qL1xuXG5AaW1wb3J0IFwib2JqZWN0cy9jb250YWluZXIuc2Nzc1wiO1xuIiwiLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDAgMTAlO1xufVxuIiwiLmJ0bi1nZW5lcmljIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwMHB4O1xuICBib3JkZXI6IDA7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzLCBjb2xvciAuM3M7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAmLi1ncmVlbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuLWRlZmF1bHQ7XG4gIH1cbiAgJi4tbG9hZGluZyB7XG4gICAgdGV4dC1pbmRlbnQ6IDk5OTlweDtcbiAgICAmOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIEBpbmNsdWRlIHNxdWFyZSgxNXB4KTtcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGJvcmRlci10b3AtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGFuaW1hdGlvbi1uYW1lOiByb3RhdGU7XG4gICAgICBhbmltYXRpb24tZHVyYXRpb246IC41cztcbiAgICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xuICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xuICAgIH1cbiAgfVxuICAmOmZvY3VzLFxuICAmOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAuNztcbiAgfVxuICAmOmRpc2FibGVkIHtcbiAgICBjb2xvcjogI2RkZGNkYztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIH1cbn1cblxuIiwiJGxhYmVsLXRvcERpc3RhbmNlOiA1cHg7XG5cbi5mb3JtLWdyb3VwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogM3JlbSAwO1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgJiA+IC5sYWJlbCB7XG4gICAgY29sb3I6ICMzMzMzMzM7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAkbGFiZWwtdG9wRGlzdGFuY2U7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycywgY29sb3IgLjJzO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG4gICYgPiAuaW5wdXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBvdXRsaW5lOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogI2VmZWVlZDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VmZWVlZDtcbiAgICBwYWRkaW5nOiAkbGFiZWwtdG9wRGlzdGFuY2UgMDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuMnM7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgIH1cblxuICAgICYuLWludmFsaWQge1xuICAgICAgY29sb3I6ICNlYjRhNDY7XG4gICAgICBib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICB9XG4gICAgJi4taW52YWxpZCB+IC5lcnJvcnMge1xuICAgICAgY29sb3I6ICNlYjRhNDY7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgICYuLXR5cGVkIH4gLmxhYmVsLFxuICAgICY6Zm9jdXMgfiAubGFiZWwge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICB9XG4gIH1cblxuICAmID4gLmVycm9ycyB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMnM7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=*/