/*
# Settings:
- This are basic configs of your architecture. Are the global variables that define colors, spaces, paddings, and another required settings
to the framework.
- Here we don't have CSS that will compile, just the definitions for other files that will do it
*/
/*
# Tools
- It's the place that you will write your mixins and functions needed to build your layouts.
- Could be anything, since font-face mixins, until animations and etc...
- Nothing here will genereta final CSS too.
*/
@keyframes rotate {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(360deg); } }

/*
# Generic
- This is the first layer, that will generate final CSS, here you define yours resets and just that.
*/
* {
  box-sizing: border-box;
  font-family: sans-serif; }

html {
  font-size: 10px; }

body {
  font-size: 1.4rem; }

/*
# Base
- Here it's the last layer that we willl see selectors directly in tags.
- Here we will leave styles for headings (h1-h6), blockquotes, a, buttons, etc.
- just BASIC styles.
*/
h1 {
  font-size: 3rem; }

table {
  width: 100%; }
  @media screen and (max-width: 600px) {
    table {
      display: block;
      overflow-x: auto;
      white-space: nowrap; } }

td {
  padding: 1.5rem; }

/*
# Objects
Following OOCSS, here is where we will have our little "objects" (little parts of the site, that area reused so many times).
Ex: Buttons, lists, painels...
*/
.container {
  padding: 0 10%;
  max-width: 900px;
  margin: 0 auto; }

.page-title {
  font-size: 4rem;
  text-align: center; }

.spinner {
  position: relative;
  text-indent: 9999px; }
  .spinner:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    margin: auto;
    width: 40px;
    height: 40px;
    border: 2px solid transparent;
    border-left-color: currentColor;
    border-top-color: currentColor;
    border-radius: 50%;
    animation-name: rotate;
    animation-duration: .5s;
    animation-iteration-count: infinite;
    animation-timing-function: linear; }

.fab {
  position: fixed;
  bottom: 3%;
  right: 5%;
  max-width: 150px; }

.btn-generic {
  width: 100%;
  padding: 15px;
  border-radius: 200px;
  border: 0;
  color: #ffffff;
  transition: opacity .3s, color .3s;
  cursor: pointer;
  outline: 0;
  font-size: 1.4rem;
  text-align: center;
  text-decoration: none; }
  .btn-generic.-green {
    background-color: #00c8b3; }
  .btn-generic.-purple {
    background-color: #e6258c; }
  .btn-generic.-red {
    background-color: #eb4a46; }
  .btn-generic.-loading {
    position: relative;
    text-indent: 9999px; }
    .btn-generic.-loading:after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      margin: auto;
      width: 15px;
      height: 15px;
      border: 2px solid transparent;
      border-left-color: currentColor;
      border-top-color: currentColor;
      border-radius: 50%;
      animation-name: rotate;
      animation-duration: .5s;
      animation-iteration-count: infinite;
      animation-timing-function: linear; }
  .btn-generic.-small {
    font-size: 1rem;
    padding: .8rem; }
  .btn-generic:focus, .btn-generic:hover {
    opacity: .7; }
  .btn-generic:disabled {
    color: #dddcdc;
    background-color: #f6f6f6;
    cursor: not-allowed; }

.form-standard > .submit {
  max-width: 70%;
  margin: 0 auto;
  display: block; }

.form-group {
  width: 100%;
  display: block;
  position: relative;
  margin: 3rem 0;
  font-size: 1.4rem; }
  .form-group > .label {
    color: #333333;
    position: absolute;
    left: 0;
    top: 5px;
    transition: transform .2s, color .2s;
    pointer-events: none; }
  .form-group > .input {
    display: block;
    font-size: inherit;
    outline: 0;
    width: 100%;
    border: none;
    color: #efeeed;
    border-bottom: 1px solid #efeeed;
    padding: 5px 0;
    transition: color .2s; }
    .form-group > .input:focus {
      color: #333333; }
    .form-group > .input.-invalid {
      color: #eb4a46;
      border-color: currentColor; }
    .form-group > .input.-invalid ~ .errors {
      color: #eb4a46;
      opacity: 1; }
    .form-group > .input.-typed ~ .label,
    .form-group > .input:focus ~ .label {
      transform: translateY(-100%); }
  .form-group > .errors {
    opacity: 0;
    display: block;
    width: 100%;
    position: absolute;
    font-size: 1.2rem;
    transition: opacity .2s; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/